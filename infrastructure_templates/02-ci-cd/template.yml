# This sample is non-production-ready template
# Â© 2021 Amazon Web Services, Inc. or its affiliates. All Rights Reserved.
# This AWS Content is provided subject to the terms of the AWS Customer Agreement available at
# http://aws.amazon.com/agreement or other written agreement between Customer and either
# Amazon Web Services, Inc. or Amazon Web Services EMEA SARL or both.

AWSTemplateFormatVersion: 2010-09-09
Description: CI/CD MLOps
Parameters:
  AccountIdDev:
    Type: String
    Description: AWS Account Id for dev environment
    Default: ''
  PipelineSuffix:
    Type: String
    Description: Suffix for the pipeline names
    Default: ''
  RepositoryTrainingName:
    Type: String
    Description: CodeCommit repository name for training
    Default: ''
  RepositoryDeploymentName:
    Type: String
    Description: CodeCommit repository name for deployment
    Default: ''
  S3BucketArtifacts:
    Type: String
    Description: S3 Bucket for ML artifacts
Conditions:
  AccountIdDevEmpty: !Equals
    - !Ref AccountIdDev
    - ''
  PipelineSuffixEmpty: !Equals
    - !Ref PipelineSuffix
    - ''
Resources:
  S3BucketCode:
    Type: 'AWS::S3::Bucket'
    Properties:
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
  CodeRepositoryTraining:
    Type: 'AWS::CodeCommit::Repository'
    Properties:
      RepositoryName: !Ref RepositoryTrainingName
  CodeRepositoryDeployment:
    Type: 'AWS::CodeCommit::Repository'
    Properties:
      RepositoryName: !Ref RepositoryDeploymentName
  CodePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'cloudformation:*'
              - 'cloudwatch:*'
              - 'codebuild:*'
              - 'codecommit:*'
              - 'codedeploy:*'
              - 'greengrass:*'
              - 'iam:*'
              - 'iot:*'
              - 'kms:CreateGrant'
              - 'kms:Decrypt'
              - 'kms:DescribeKey'
              - 'kms:Encrypt'
              - 'kms:ReEncrypt'
              - 'kms:GenerateDataKey'
              - 'logs:*'
              - 's3:*'
              - 'sts:AssumeRole'
              - 'sts:GetCallerIdentity'
            Resource:
              - '*'
  CodeRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
                - codepipeline.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - !Ref CodePolicy
  BuildProjectDev:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/standard:5.0'
        PrivilegedMode: true
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: CROSS_ACCOUNT_ROLE
            Value: !If
              - AccountIdDevEmpty
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/ci-cd-automation-role'
              - !Sub 'arn:aws:iam::${AccountIdDev}:role/ci-cd-automation-role'
          - Name: ENV
            Value: dev
          - Name: S3_BUCKET_NAME
            Value: !Ref S3BucketArtifacts
      ServiceRole: !Ref CodeRole
      TimeoutInMinutes: 480
      Source:
        BuildSpec: buildspec.yml
        Type: CODEPIPELINE
  BuildProjectNoProd:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/standard:5.0'
        PrivilegedMode: true
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: CROSS_ACCOUNT_ROLE
            Value: !If
              - AccountIdDevEmpty
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/ci-cd-automation-role'
              - !Sub 'arn:aws:iam::${AccountIdDev}:role/ci-cd-automation-role'
          - Name: ENV
            Value: dev
          - Name: S3_BUCKET_NAME
            Value: !Ref S3BucketArtifacts
      ServiceRole: !Ref CodeRole
      TimeoutInMinutes: 480
      Source:
        BuildSpec: buildspec.yml
        Type: CODEPIPELINE
  CodePipelineTrainingDev:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !If
        - PipelineSuffixEmpty
        - PipelineDev
        - !Sub 'PipelineDev-${PipelineSuffix}'
      RoleArn: !GetAtt
        - CodeRole
        - Arn
      ArtifactStore:
        Location: !Ref S3BucketCode
        Type: S3
      Stages:
        - Name: Source
          Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              Configuration:
                BranchName: master
                RepositoryName: !GetAtt
                  - CodeRepositoryTraining
                  - Name
                PollForSourceChanges: true
              Name: source
              OutputArtifacts:
                - Name: MLPipelineSourceArtifact
              Region: !Sub '${AWS::Region}'
              RunOrder: 1
        - Name: Build
          Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref BuildProjectDev
              InputArtifacts:
                - Name: MLPipelineSourceArtifact
              Name: build
              OutputArtifacts:
                - Name: ModelBuildBuildArtifact
              Region: !Sub '${AWS::Region}'
              RunOrder: 1
  CodePipelineDeployment:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !If
        - PipelineSuffixEmpty
        - PipelineNoProd
        - !Sub 'PipelineNoProd-${PipelineSuffix}'
      RoleArn: !GetAtt
        - CodeRole
        - Arn
      ArtifactStore:
        Location: !Ref S3BucketCode
        Type: S3
      Stages:
        - Name: Source
          Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              Configuration:
                BranchName: master
                RepositoryName: !GetAtt
                  - CodeRepositoryDeployment
                  - Name
                PollForSourceChanges: true
              Name: source
              OutputArtifacts:
                - Name: MLPipelineSourceArtifact
              Region: !Sub '${AWS::Region}'
              RunOrder: 1
        - Name: Build
          Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref BuildProjectNoProd
              InputArtifacts:
                - Name: MLPipelineSourceArtifact
              Name: build
              OutputArtifacts:
                - Name: ModelBuildBuildArtifact
              Region: !Sub '${AWS::Region}'
              RunOrder: 1

  CodePipelineDeploymentArn:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /codepipeline/deployment
      Tier: Standard
      Type: String
      Value: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CodePipelineDeployment}"
