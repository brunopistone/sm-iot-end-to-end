Parameters:
  AmazonSageMakerEdgeDeviceFleetPolicyArn:
    Type: String
    Description: 'ARN of the IAM Managed Policy AmazonSageMakerEdgeDeviceFleetPolicyArn to add to the TES role'
    Default: arn:aws:iam::aws:policy/service-role/AmazonSageMakerEdgeDeviceFleetPolicy
  
  AMI:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/canonical/ubuntu/server/20.04/stable/current/amd64/hvm/ebs-gp2/ami-id

  DeviceFleetSuffix:
    Type: String
    Description: Suffix string for device fleet resources
  
  SageMakerStudioRoleName:
    Type: String
    Description: Name of the role used by SageMaker Studio. Can be empty if it is stored in SSM
    Default: ""

  S3BucketML:
    Type: String
    Description: Name of the S3 bucket used for ML. Can be empty if it is stored in SSM
    Default: ""

  ThingGroupName:
    Type: String
    Description: IoT Thing Group Name of the Wind Turbines

Conditions:
  S3BucketMLEmpty: !Equals
    - !Ref S3BucketML
    - ''
  SageMakerStudioRoleNameEmpty: !Equals
      - !Ref SageMakerStudioRoleName
      - ''

Resources:
  ### Start - VPC for IoT edge devices ###

  ggvpcF5DD5645:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 192.168.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: WindturbinesStack/gg-vpc

  ggvpcgreengrasssubnetSubnet1SubnetBE4B0D57:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 192.168.0.0/24
      VpcId:
        Ref: ggvpcF5DD5645
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: greengrass-subnet
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: WindturbinesStack/gg-vpc/greengrass-subnetSubnet1

  ggvpcgreengrasssubnetSubnet1RouteTable0EB37DF6:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ggvpcF5DD5645
      Tags:
        - Key: Name
          Value: WindturbinesStack/gg-vpc/greengrass-subnetSubnet1
 
  ggvpcgreengrasssubnetSubnet1RouteTableAssociationCEA386B4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: ggvpcgreengrasssubnetSubnet1RouteTable0EB37DF6
      SubnetId:
        Ref: ggvpcgreengrasssubnetSubnet1SubnetBE4B0D57

  ggvpcgreengrasssubnetSubnet1DefaultRoute2532DD82:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: ggvpcgreengrasssubnetSubnet1RouteTable0EB37DF6
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: ggvpcIGW428E1FB2
    DependsOn:
      - ggvpcVPCGW460DCDB5
 
  ggvpcIGW428E1FB2:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: WindturbinesStack/gg-vpc

  ggvpcVPCGW460DCDB5:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: ggvpcF5DD5645
      InternetGatewayId:
        Ref: ggvpcIGW428E1FB2

  ### End - VPC for IoT edge devices ###

  ### Start - TES role ###

  Greengrassv2TesRoleFA89CD28:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: credentials.iot.amazonaws.com
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Ref: ggtesmanagedpolicy2057D301
        - Ref: AmazonSageMakerEdgeDeviceFleetPolicyArn
      RoleName: SageMaker-WindturbinesStackTESRole

  ### End - TES role ###

  ### Start - TES Policy ###

  ggtesmanagedpolicy2057D301:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - iot:DescribeCertificate
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:DescribeLogStreams
              - iot:Connect
              - iot:Publish
              - iot:Subscribe
              - iot:Receive
              - s3:*
              - greengrass:CreateDeployment
              - greengrass:CreateComponentVersion
              - greengrass:DescribeComponent
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      Description: ""
      ManagedPolicyName: WindturbinesStackTESRoleAccess
      Path: /

  ### End - TES :policy ###

  ### Start - ec2 instance policy ###

  GGPolicy1C59DD0A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - iot:AddThingToThingGroup
              - iot:AttachPolicy
              - iot:AttachThingPrincipal
              - iot:CreateKeysAndCertificate
              - iot:CreatePolicy
              - iot:CreateRoleAlias
              - iot:CreateThing
              - iot:CreateThingGroup
              - iot:DescribeEndpoint
              - iot:DescribeRoleAlias
              - iot:DescribeThingGroup
              - iot:GetPolicy  
              - sts:GetCallerIdentity
              - iam:GetPolicy
              - iam:GetRole
              - iam:CreateRole
              - iam:PassRole
              - iam:CreatePolicy
              - iam:AttachRolePolicy
            Effect: Allow
            Resource: "*"
          - Action:
              - greengrass:CreateDeployment
              - greengrass:CreateComponentVersion
              - greengrass:DescribeComponent
              - iot:CancelJob
              - iot:CreateJob
              - iot:DeleteThingShadow
              - iot:DescribeJob
              - iot:DescribeThing
              - iot:DescribeThingGroup
              - iot:GetThingShadow
              - iot:UpdateJob
              - iot:UpdateThingShadow
              - s3:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: GGPolicy1C59DD0A
      Roles:
        - Ref: ec2instancerole

  ### End - ec2 instance policy ###

  ### Ec2 passrole policy - to attach to sagemaker execution role ###

  EC2PassRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - iam:PassRole
            Effect: Allow
            Resource: !Sub "arn:aws:iam::${AWS::AccountId}:role/ec2instancerole"
      PolicyName: EC2PassRolePolicy
      Roles:
        !If
          - SageMakerStudioRoleNameEmpty
          - - '{{resolve:ssm:/sagemaker/role}}'
          - - !Ref SageMakerStudioRoleName
          
  ### Start - ec2instance role ###

  ec2instancerole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonEC2RoleforSSM
      RoleName: ec2instancerole

  ### End - ec2instance role ###

  ### Start - edge device 0 ###

  edgedevice0SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: WindturbinesStack/edge-device-0/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: edge-device-0
      VpcId:
        Ref: ggvpcF5DD5645

  edgedevice0InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: ec2instancerole

  edgedevice0:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      IamInstanceProfile:
        Ref: edgedevice0InstanceProfile
      ImageId:
        Ref: AMI
      InstanceType: t3.micro
      SecurityGroupIds:
        - Fn::GetAtt:
            - edgedevice0SecurityGroup
            - GroupId
      SubnetId:
        Ref: ggvpcgreengrasssubnetSubnet1SubnetBE4B0D57
      Tags:
        - Key: Name
          Value: edge-device-0
      UserData:
        Fn::Base64: !Sub "#!/bin/bash
          
          wget -O- https://apt.corretto.aws/corretto.key | apt-key add - 
          
          add-apt-repository 'deb https://apt.corretto.aws stable main'
           
          apt-get update; apt-get install -y java-11-amazon-corretto-jdk
          
          apt install unzip -y
          
          apt install python3-pip -y
          
          apt-get install python3.8-venv -y

          ec2_region=$(curl http://169.254.169.254/latest/meta-data/placement/region)

          curl -s https://d2s8p88vqu9w66.cloudfront.net/releases/greengrass-nucleus-latest.zip > greengrass-nucleus-latest.zip  && unzip greengrass-nucleus-latest.zip -d GreengrassCore

          java -Droot=\"/greengrass/v2\" -Dlog.store=FILE -jar ./GreengrassCore/lib/Greengrass.jar --aws-region $ec2_region  --thing-name edge-device-0 --thing-group-name ${ThingGroupName}  --tes-role-name SageMaker-WindturbinesStackTESRole --tes-role-alias-name SageMaker-WindturbinesStackTESRoleAlias  --component-default-user ggc_user:ggc_group --provision true --setup-system-service true --deploy-dev-tools true

          \        "

    DependsOn:
      - ec2instancerole

  ### End - edge device 0 ###

  ### Start - edge device 1 ###

  edgedevice1SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: WindturbinesStack/edge-device-1/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: edge-device-1
      VpcId:
        Ref: ggvpcF5DD5645

  edgedevice1InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: ec2instancerole

  edgedevice1:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      IamInstanceProfile:
        Ref: edgedevice1InstanceProfile
      ImageId:
        Ref: AMI
      InstanceType: t3.micro
      SecurityGroupIds:
        - Fn::GetAtt:
            - edgedevice1SecurityGroup
            - GroupId
      SubnetId:
        Ref: ggvpcgreengrasssubnetSubnet1SubnetBE4B0D57
      Tags:
        - Key: Name
          Value: edge-device-1
      UserData:
        Fn::Base64: !Sub "#!/bin/bash
        
          wget -O- https://apt.corretto.aws/corretto.key | apt-key add - 
          
          add-apt-repository 'deb https://apt.corretto.aws stable main'
           
          apt-get update; apt-get install -y java-11-amazon-corretto-jdk
          
          apt install unzip -y
          
          apt install python3-pip -y
          
          apt-get install python3.8-venv -y

          ec2_region=$(curl http://169.254.169.254/latest/meta-data/placement/region)

          curl -s https://d2s8p88vqu9w66.cloudfront.net/releases/greengrass-nucleus-latest.zip > greengrass-nucleus-latest.zip  && unzip greengrass-nucleus-latest.zip -d GreengrassCore

          java -Droot=\"/greengrass/v2\" -Dlog.store=FILE -jar ./GreengrassCore/lib/Greengrass.jar --aws-region $ec2_region  --thing-name edge-device-1 --thing-group-name ${ThingGroupName}   --tes-role-name SageMaker-WindturbinesStackTESRole --tes-role-alias-name SageMaker-WindturbinesStackTESRoleAlias  --component-default-user ggc_user:ggc_group --provision true --setup-system-service true --deploy-dev-tools true

          \        "

    DependsOn:
      - ec2instancerole

  #End - edge device 1

  ### DeviceFleet device role ###

  WindTurbineFarmPolicy:
    Type: AWS::IoT::Policy
    Properties:
      PolicyName: !Sub "WindTurbineFarmPolicy-${DeviceFleetSuffix}"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - iot:Connect
            Resource:
              - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:*"
          - Effect: Allow
            Action:
              - iot:Publish
              - iot:Receive
            Resource:
              - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/*"
              - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/*/*"
              - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/$aws/*"
              - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:*"
              - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:*/*"
          - Effect: Allow
            Action:
              - iot:Subscribe
            Resource:
              - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/*"
              - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/*/*"
              - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/$aws/*"
              - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/$aws/*"
              - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:*"
              - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:*/*"
          - Effect: Allow
            Action:
              - iot:UpdateThingShadow
            Resource:
              - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/*"
              - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/*/*"
              - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:thing/*"
          - Effect: Allow
            Action:
              - iot:AssumeRoleWithCertificate
            Resource:
              - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:rolealias/SageMakerEdge-wind-turbine-farm-${DeviceFleetSuffix}"

  WindTurbineFarmRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: WindTurbineFarmRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - sagemaker.amazonaws.com
                - iot.amazonaws.com
                - credentials.iot.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Sub WindTurbineFarmRoleS3Policy-${DeviceFleetSuffix}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:CreateBucket"
                  - "s3:GetBucketAcl"
                  - "s3:GetObject"
                  - "s3:ListBucket"
                  - "s3:GetBucketLocation"
                  - "s3:PutObject"
                  - "s3:ListObjects"
                  - "s3:ListAllMyBuckets"
                  - "s3:HeadBucket"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - 'iot:CreateRoleAlias'
                  - 'iot:DescribeRoleAlias'
                  - 'iot:UpdateRoleAlias'
                  - 'iot:TagResource'
                  - 'iot:ListTagsForResource'
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - 'iam:GetRole'
                  - 'iam:PassRole'
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - 'sagemaker:GetDeviceRegistration'
                  - 'sagemaker:SendHeartbeat'
                Resource: "*"

  ### IoT Things representing each device ###

  Thing0:
    Type: AWS::IoT::Thing
    Properties:
      ThingName: edge-device-0
  Thing1:
    Type: AWS::IoT::Thing
    Properties:
      ThingName: edge-device-1

  EdgeDeviceFleet:
    Type: AWS::SageMaker::DeviceFleet
    Properties:
      Description: String
      DeviceFleetName: !Sub wind-turbine-farm-${DeviceFleetSuffix}
      OutputConfig:
        S3OutputLocation:
          !Join
            - '/'
            - - 's3:/'
              - !If
                - S3BucketMLEmpty
                - '{{resolve:ssm:/s3/bucket/ml}}'
                - !Ref S3BucketML
              - 'data'
              - 'iot'
      RoleArn: !GetAtt WindTurbineFarmRole.Arn